import logging
from pathlib import PurePath
from typing import Callable, Collection, Set

from common import OperatingSystem
from common.agent_events import AgentEventTag
from common.credentials import Credentials
from common.tags import (
    BRUTE_FORCE_T1110_TAG,
    INGRESS_TOOL_TRANSFER_T1105_TAG,
    REMOTE_SERVICES_T1021_TAG,
)
from common.types import NetworkPort
from infection_monkey.exploit.tools import (
    IRemoteAccessClient,
    RemoteAuthenticationError,
    RemoteCommandExecutionError,
    RemoteFileCopyError,
)
from infection_monkey.i_puppet import TargetHost

from .rdp_options import RDPOptions

logger = logging.getLogger(__name__)


LOGIN_TAGS = {
    REMOTE_SERVICES_T1021_TAG,
    BRUTE_FORCE_T1110_TAG,
}
COPY_FILE_TAGS = {
    REMOTE_SERVICES_T1021_TAG,
    INGRESS_TOOL_TRANSFER_T1105_TAG,
}
EXECUTION_TAGS = {
    REMOTE_SERVICES_T1021_TAG,
}

RDP_PORTS = [NetworkPort(3389)]


class RDPRemoteAccessClient(IRemoteAccessClient):
    def __init__(
        self,
        host: TargetHost,
        options: RDPOptions,
        command_builder: Callable[[PurePath], str],
    ):
        self._host = host
        self._options = options
        self._build_command = command_builder

    def login(self, credentials: Credentials, tags: Set[AgentEventTag]):
        # TODO: Use aardwolf to login to the RDP server. See https://github.com/guardicore/monkey/blob/3afeb7cd035e8a615b4347e19e62ca581e036ebd/monkey/agent_plugins/exploiters/rdp/src/rdp.py
        raise RemoteAuthenticationError("Failed to login to RDP server")

    def get_os(self) -> OperatingSystem:
        return OperatingSystem.WINDOWS

    def execute_agent(self, agent_binary_path: PurePath, tags: Set[AgentEventTag]):
        # TODO: Use aardwolf to execute the copied agent
        raise RemoteCommandExecutionError("Failed to execute agent")

    def copy_file(self, file: bytes, dest: PurePath, tags: Set[AgentEventTag]):
        # TODO: Use aardwolf to copy the file. See https://github.com/skelsec/aardwolf/commit/0a8e99dd97f0aa802af3d3310fa0fdad468149b6
        raise RemoteFileCopyError("Failed to copy file to RDP server")

    def get_writable_paths(self) -> Collection[PurePath]:
        return []
